name: Authentication E2E Tests

on:
  push:
    branches: [dev, main]
    paths:
      - "frontend/tests/auth*.spec.ts"
      - "frontend/tests/helpers/auth-helpers.ts"
      - "frontend/app/login/**"
      - "frontend/app/register/**"
      - "frontend/lib/auth*.ts"
      - "frontend/middleware.ts"
      - ".github/workflows/auth-e2e-tests.yml"
  pull_request:
    branches: [dev, main]
    paths:
      - "frontend/tests/auth*.spec.ts"
      - "frontend/tests/helpers/auth-helpers.ts"
      - "frontend/app/login/**"
      - "frontend/app/register/**"
      - "frontend/lib/auth*.ts"
      - "frontend/middleware.ts"
  workflow_dispatch:

jobs:
  auth-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    env:
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      AUTH_API_BASE_URL: ${{ secrets.AUTH_API_BASE_URL }}
      BOOK_API_BASE_URL: ${{ secrets.BOOK_API_BASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 🏗️ Build Next.js app
        run: npm run build

      - name: 🧪 Run Authentication Tests (${{ matrix.browser }})
        run: npx playwright test tests/auth.spec.ts --project=${{ matrix.browser }} --reporter=html,json,junit,github
        continue-on-error: true

      - name: 🧪 Run API Tests (${{ matrix.browser }})
        run: npx playwright test tests/auth-api.spec.ts --project=${{ matrix.browser }} --reporter=html,json,junit,github
        continue-on-error: true

      - name: 🧪 Run Middleware Tests (${{ matrix.browser }})
        run: npx playwright test tests/middleware.spec.ts --project=${{ matrix.browser }} --reporter=html,json,junit,github
        continue-on-error: true

      - name: 🧪 Run Integration Tests (${{ matrix.browser }})
        run: npx playwright test tests/auth-integration.spec.ts --project=${{ matrix.browser }} --reporter=html,json,junit,github
        continue-on-error: true

      - name: 📊 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            frontend/test-results/
            frontend/results.xml
          retention-days: 30

      - name: 📸 Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.browser }}
          path: frontend/test-results/**/*.png
          retention-days: 7

      - name: 🎥 Upload Videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: videos-${{ matrix.browser }}
          path: frontend/test-results/**/*.webm
          retention-days: 7

      - name: 📄 Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: frontend/playwright-report/
          retention-days: 30

  publish-results:
    name: 📊 Publish Test Results
    needs: auth-tests
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: 📥 Download All Test Results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          merge-multiple: true
          path: test-results

      - name: 📊 Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            test-results/*.xml
          check_name: Authentication Test Results
          comment_title: 🔐 Authentication E2E Test Results
          compare_to_earlier_commit: true
          fail_on: nothing

      - name: 📝 Create Detailed Summary
        run: |
          echo "## 🔐 Authentication E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Suites Executed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Authentication Flow Tests (Login, Register, Session)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ API Endpoint Tests (Registration, Validation, Security)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Middleware Tests (Route Protection, Token Validation)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Integration Tests (Full User Flows)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Browsers Tested" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Chromium" >> $GITHUB_STEP_SUMMARY
          echo "- 🦊 Firefox" >> $GITHUB_STEP_SUMMARY
          echo "- 🧭 WebKit (Safari)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Detailed Reports" >> $GITHUB_STEP_SUMMARY
          echo "Download the Playwright HTML reports from the artifacts section for detailed test results, screenshots, and traces." >> $GITHUB_STEP_SUMMARY

  notify:
    name: 📢 Send Notifications
    needs: [auth-tests, publish-results]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: 📊 Check Test Status
        id: test-status
        run: |
          if [ "${{ needs.auth-tests.result }}" == "success" ]; then
            echo "status=✅ All authentication tests passed!" >> $GITHUB_OUTPUT
            echo "color=28a745" >> $GITHUB_OUTPUT
          elif [ "${{ needs.auth-tests.result }}" == "failure" ]; then
            echo "status=❌ Some authentication tests failed" >> $GITHUB_OUTPUT
            echo "color=dc3545" >> $GITHUB_OUTPUT
          else
            echo "status=⚠️ Authentication tests status unclear" >> $GITHUB_OUTPUT
            echo "color=ffc107" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Create Summary
        run: |
          echo "### ${{ steps.test-status.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Actor:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in the [Actions tab](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
